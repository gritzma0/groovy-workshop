package workshop

import java.text.SimpleDateFormat
import groovy.lang.Delegate
import groovy.transform.ToString

/**
 * Created by hmaass on 21.07.14.
 */
class K9AST extends GroovyTestCase {

    // Find an annotation to fix the `test_01_synthesizeToString` method.
    // ------------ START EDITING HERE ----------------------
    @ToString
    // ------------ STOP EDITING HERE -----------------------
	class Event {
        // Find an annotation to fix the `test_02_delegationThroughTransformation` method.
        // ------------ START EDITING HERE ----------------------
		@Delegate
        // ------------ STOP EDITING HERE -----------------------
        Date when
		String title, url
	}
	
	def dateFormat = new SimpleDateFormat("dd.MM.yyyy")
	
	void test_01_synthesizeToString() {
		def nconf = new Event(title: 'Namics Conference', 
			                    url: 'http://www.namics.com/',
			                   when: dateFormat.parse('21.08.2014'))
        def toString = nconf.toString()

        // Make sure that a `toString` method is generated by an annotation.
        // Look into the groovy.transform package to find a suitable annotation.

        assert toString.contains("Namics Conference")
        assert toString.contains("http://www.namics.com")
        assert toString.contains("2014")
	}
	
	void test_02_delegationThroughTransformation() {
		def nconf = new Event(title: 'Namics Conference', 
			                    url: 'http://www.namics.com/',
			                   when: dateFormat.parse('21.08.2014'))
		def today = dateFormat.parse('23.08.2014')
        // Make sure that the `before` method can be called without the `when` reference.
        // Look into the groovy.transform package to find a suitable annotation.

		assert nconf.when.before(today)
		assert nconf.before(today)
		assert nconf.title == 'Namics Conference'
	}
	
	void test_03_delegationDoesNotChangeAnyTypes() {
		def nconf = new Event(title: 'Namics Conference', 
			                    url: 'http://www.namics.com/',
			                   when: dateFormat.parse('21.08.2014'))
		def wwdc = new Event(title: 'WWDC 2014', 
			                    url: 'https://developer.apple.com/wwdc/',
			                   when: dateFormat.parse('02.06.2014'))
		assert wwdc.when.before(nconf.when)
		def delegatedObject
		// ------------ START EDITING HERE ----------------------
        delegatedObject = nconf.when
		// ------------ STOP EDITING HERE -----------------------
		assert delegatedObject != null && wwdc.before(delegatedObject)
	}
	
}
